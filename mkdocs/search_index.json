{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to MkDocs\n\n\n\n\nCss: Setup and Selectors",
            "title": "home"
        },
        {
            "location": "/#welcome-to-mkdocs",
            "text": "Css: Setup and Selectors",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/css_Setup-and-Selectors/",
            "text": "CSS Setup and Selectors\n\n\nIn this lesson you will learn how to set up a CSS file, and how to create CSS selectors, and how to set up CSS rule sets.\n1. \nIntro to CSS\n\n    * Cascading Style Sheets: is a language that web developers use to \nstyle\n the HTML content on a web page.\n\n\n\n\n\n\nInline Styles\n\n    \n<\np\n \nstyle\n=\n\"font-family: Arial;\"\n>\nI'm learning to code\n</\np\n>\n\n\n\n\n\n\n\n\nThe <style> Tag\n\n   \n<\nstyle\n>\n\n\np\n \n{\n\n    \ncolor\n:\n \nred\n;\n\n    \nfont-size\n:\n \n20\npx\n;\n\n\n}\n\n\n</\nstyle\n>\n\n\n\n\n\n\n\n\nThe .css file\n\n\n\n\nTo avoid mixing code by storing HTML and CSS code in separate files.\n\n\n\n\n\n\n\n\nLinking the CSS file\n\n     \nHTML\n    <link href=\"./style.css\" type=\"text/css\" rel=\"stylesheet\">\n\n\n\n\nUse \n<link>\n element to link HTML and CSS diles togethor. Here are some arrtibutes:\n\n\nhref\n: like the anchor element, the value of this arrtibute must be the addresss, or path, to the CSS file.\n\n\ntype\n: The type of document that yout are linking to. The value of this attribute should be set to \ntext/css\n.\n\n\nrel\n: describes the relationship between the HTML dile and the CSS file. the value should be set to \nstylesheet\n.\n\n\n\n\n\n\n\n\nTag Name\n\n       \np\n \n{\n\n\n\n}\n\n\n\n\n\n\nCSS can select HTML elements by using and element's tag name.\n\n\n\n\n\n\n\n\nClass Name\n\n\n\n\nHTML\n \n<\np\n \nclass\n=\n\"brand\"\n>\n\n\n\n\nCSS\n\n.\nbrand\n \n{\n\n\n\n}\n\n\n\nIt possible to select an element by its \nclass\n( . ) attribute.\n\n\n\n\n\n\n\n\nMultiple Classes\n\n\n\n\nHTML\n\n<\nh1\n \nclass\n=\n\"title uppercase\"\n>\n\n\n\n\nCSS\n\n.\ntitle\n \n{\n\n  \ncolor\n:\n \nteal\n;\n\n\n}\n\n\n.\nuppercase\n \n{\n\n  \ntext-transform\n:\n \nuppercase\n;\n\n\n}\n\n\n\nIt is able to add more than one class name to an HTML element's \nclass\n attribute.\n\n\n\n\n\n\n\n\nID Name\n\n\n\n\nHTML\n\n<\nh1\n \nid\n=\n\"large-title\"\n>\n...\n</\nh1\n>\n\n\n\n\nCSS\n\n#\nlarge-title\n \n{\n\n\n\n}\n\n\n\nAn element needs to be styled uniquely.\n\n\n\n\n\n\n\n\nClasses and IDs\n\n\n\n\nClasses are meant to be used many times, an ID is meant to style only one element.\n\n\nIDs override the styles of tags and classes, So  they should be used sparingly and only on elements that need to always appear the same.\n\n\nHTML\n\n<\nh6\n \nclass\n=\n\"publish-time\"\n>\nPublished: 2 Days Ago\n</\nh6\n>\n\n\n\n\nCSS\n\ncolor\n:\n \ngray\n;\n\n\n\n\n\n\n\n\n\n\nSpecificity\n\n\n\n\nSpecificity is the order by which the browser decides which CSS styles will be displayed.\n\n\nIn practice, using the lowest degree of specificity, so that if an element needs a new style, it is easy to override.\n\n\ntag > class > ID\n\n\nHTML\n\n<\nh1\n \nclass\n=\n\"headline\"\n>\nBreaking News\n</\nh1\n>\n\n\n\n\nCSS\n\nh1\n \n{\n\n    \ncolor\n:\n \nred\n;\n\n\n}\n\n\n.\nheadline\n \n{\n\n    \ncolor\n:\n \nfirevrickl\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\nChaining Selectors\n\n\n\n\nit's possible to require an HTML element to have two or more CSS selectors at the same time.  we will refer to as chaining.\n\nh1\n.\nspecial\n \n{\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\nNested Elements\n\n\n\n\nNested elements can be selected by separating selectors with a space.\n\n\nHTML\n\n<\nul\n \nclass\n=\n'main-list'\n>\n\n  \n<\nli\n>\n ...\n</\nli\n>\n\n  \n<\nli\n>\n ...\n</\nli\n>\n\n\n</\nul\n>\n\n\n\n\nCSS\n\n.\nmain-list\n \nli\n{\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\nChaing and Specificity\n\n\n\n\nInstead of selecting all \n<p>\n elements, you selected only the \n<p>\n elements nested inside the \n.main\n elements.\n\n\nCSS\n\np\n \n{\n\n    \ncolor\n:\n \nblue\n;\n\n\n}\n\n\n.\nmain\n \np\n \n{\n\n    \ncolor\n:\n \nred\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\nSupplement\n\n\n\n\n\n\nImportant\n\n\n\n\nThe \n!important\n flag will override any style, however it should almost never be used, as it is extremely difficult to override.\n\n\nOnce !important is used, it is very hard to override.\n\n\nAs a result, it should almost never be used.\n\np\n \n{\n\n    \ncolor\n:\n \nblue\n \n!\nomportant\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\nMutiple Selectors\n\n\n\n\nMultiple unrelated selectors can receive the same styles by separating the selector names with commas.\n\n\nCSS\n   \nh1\n \n{\n\n    \nfont-family\n:\n \nGeorgia\n;\n\n\n}\n\n\n.\nmenu\n \n{\n\n    \nfont-family\n:\n \nGeorgia\n;\n\n\n}\n\n\n\n\nCSS\n   \nh1\n,\n\n\n.\nmenu\n \n{\n\n    \nfont-family\n:\n \nGeorgia\n;\n\n\n}",
            "title": "CSS Setup"
        },
        {
            "location": "/css_Setup-and-Selectors/#css-setup-and-selectors",
            "text": "In this lesson you will learn how to set up a CSS file, and how to create CSS selectors, and how to set up CSS rule sets.\n1.  Intro to CSS \n    * Cascading Style Sheets: is a language that web developers use to  style  the HTML content on a web page.    Inline Styles \n     < p   style = \"font-family: Arial;\" > I'm learning to code </ p >     The <style> Tag \n    < style >  p   { \n     color :   red ; \n     font-size :   20 px ;  }  </ style >     The .css file   To avoid mixing code by storing HTML and CSS code in separate files.     Linking the CSS file \n      HTML\n    <link href=\"./style.css\" type=\"text/css\" rel=\"stylesheet\">   Use  <link>  element to link HTML and CSS diles togethor. Here are some arrtibutes:  href : like the anchor element, the value of this arrtibute must be the addresss, or path, to the CSS file.  type : The type of document that yout are linking to. The value of this attribute should be set to  text/css .  rel : describes the relationship between the HTML dile and the CSS file. the value should be set to  stylesheet .     Tag Name \n        p   {  }    CSS can select HTML elements by using and element's tag name.     Class Name   HTML\n  < p   class = \"brand\" >   CSS . brand   {  }  \nIt possible to select an element by its  class ( . ) attribute.     Multiple Classes   HTML < h1   class = \"title uppercase\" >   CSS . title   { \n   color :   teal ;  }  . uppercase   { \n   text-transform :   uppercase ;  }  \nIt is able to add more than one class name to an HTML element's  class  attribute.     ID Name   HTML < h1   id = \"large-title\" > ... </ h1 >   CSS # large-title   {  }  \nAn element needs to be styled uniquely.     Classes and IDs   Classes are meant to be used many times, an ID is meant to style only one element.  IDs override the styles of tags and classes, So  they should be used sparingly and only on elements that need to always appear the same.  HTML < h6   class = \"publish-time\" > Published: 2 Days Ago </ h6 >   CSS color :   gray ;      Specificity   Specificity is the order by which the browser decides which CSS styles will be displayed.  In practice, using the lowest degree of specificity, so that if an element needs a new style, it is easy to override.  tag > class > ID  HTML < h1   class = \"headline\" > Breaking News </ h1 >   CSS h1   { \n     color :   red ;  }  . headline   { \n     color :   firevrickl ;  }      Chaining Selectors   it's possible to require an HTML element to have two or more CSS selectors at the same time.  we will refer to as chaining. h1 . special   {  }      Nested Elements   Nested elements can be selected by separating selectors with a space.  HTML < ul   class = 'main-list' > \n   < li >  ... </ li > \n   < li >  ... </ li >  </ ul >   CSS . main-list   li {  }      Chaing and Specificity   Instead of selecting all  <p>  elements, you selected only the  <p>  elements nested inside the  .main  elements.  CSS p   { \n     color :   blue ;  }  . main   p   { \n     color :   red ;  }",
            "title": "CSS Setup and Selectors"
        },
        {
            "location": "/css_Setup-and-Selectors/#supplement",
            "text": "Important   The  !important  flag will override any style, however it should almost never be used, as it is extremely difficult to override.  Once !important is used, it is very hard to override.  As a result, it should almost never be used. p   { \n     color :   blue   ! omportant ;  }      Mutiple Selectors   Multiple unrelated selectors can receive the same styles by separating the selector names with commas.  CSS\n    h1   { \n     font-family :   Georgia ;  }  . menu   { \n     font-family :   Georgia ;  }   CSS\n    h1 ,  . menu   { \n     font-family :   Georgia ;  }",
            "title": "Supplement"
        },
        {
            "location": "/css_Visual-Rules/",
            "text": "CSS Visual Rules\n\n\n\n\n\n\nIntroduction To Visual Rules\n\n\n\n\n\n\nCSS Structure\n\n\n\n\n\n\nFont Family\n\n\n\n\nThe \nfont-family\n property defines the typeface of an element.\n\n\n\n\n\n\n\n\nFont Size\n\n\n\n\nfont-size\n controls the size of text displayed.\n\n\n\n\n\n\n\n\nFont Weight\n\n\n\n\nfont-weight\n defines how thin or thick text is displayed.\n\n\n\n\n\n\n\n\nText Align\n\n\n\n\nThe \ntext-align\n property places text in the left, right, or center of its parent container.\n\n\n\n\n\n\n\n\nColor\n\n\n\n\nText can have two different color attributes: \ncolor\n and \nbackground-color\n. \ncolor\n defines the color of the text, while \nbackground-color\n defines the color behind the text.\n\n\n\n\n\n\n\n\nOpacity\n\n\n\n\nCSS can make an element transparent with the \nopacity\n property.\n\n\n\n\n\n\n\n\nBackground Image\n\n\n\n\nCSS can also set the background of an element to an image with the \nbackground-image\n property.\n\n\n\n\n\n\n\n\nReview Visual Rules",
            "title": "CSS Visual Rules"
        },
        {
            "location": "/css_Visual-Rules/#css-visual-rules",
            "text": "Introduction To Visual Rules    CSS Structure    Font Family   The  font-family  property defines the typeface of an element.     Font Size   font-size  controls the size of text displayed.     Font Weight   font-weight  defines how thin or thick text is displayed.     Text Align   The  text-align  property places text in the left, right, or center of its parent container.     Color   Text can have two different color attributes:  color  and  background-color .  color  defines the color of the text, while  background-color  defines the color behind the text.     Opacity   CSS can make an element transparent with the  opacity  property.     Background Image   CSS can also set the background of an element to an image with the  background-image  property.     Review Visual Rules",
            "title": "CSS Visual Rules"
        }
    ]
}